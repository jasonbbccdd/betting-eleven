// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Tournament {
  id              Int            @id @default(autoincrement())
  order           Int            @default(0)
  code            String         @unique
  name            String?
  logo            String?
  type            String?
  confederation   Confederation? @relation(fields: [confederationCode], references: [code])
  confederationCode String?
  editions        Edition[]
}

model Confederation {
  id          Int          @id @default(autoincrement())
  order       Int          @default(0)
  code        String       @unique
  name        String?
  logo        String?
  map         String?
  tournaments Tournament[]
}

model Edition {
  id              Int        @id @default(autoincrement())
  order           Int        @default(0)
  code            String     @unique
  year            String?
  logo            String?
  numOfGroups     Int?
  numOfTeams      Int?
  tournament      Tournament @relation(fields:[tournamentCode], references: [code], onDelete: Cascade)
  tournamentCode  String
  hosts           Host[]
// groups     Group[]
}

model Host {
  id          Int  @id @default(autoincrement())
  order       Int  @default(0)
  edition     Edition @relation(fields:[editionCode], references:[code], onDelete: Cascade)
  editionCode String
  nation      Nation? @relation(fields:[nationName], references:[name])
  nationName  String?
}

model Nation {
  id         Int    @id @default(autoincrement())
  code2      String @unique
  code3      String @unique
  name       String @unique
  hosts      Host[]
}
